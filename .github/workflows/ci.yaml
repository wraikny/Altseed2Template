name: CI

on:
  push:
    branches:
      - master
      - workflows
    tags:
      - '*'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        include:
          - os: windows-latest
            target: publish.win
            dist-target: dist.win
          - os: macOS-latest
            publish-target: publish.osx
            dist-target: dist.osx

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - uses: actions/cache@v3
      with:
        path: ~/.fake
        key: ${{ runner.os }}-fake-${{ hashFiles('build.fsx.lock') }}
        restore-keys: ${{ runner.os }}-fake-

    - name: Restore tool
      run: dotnet tool restore

    - name: Restore fake
      run: dotnet fake build -t Nothing

    - name: Check Format
      run: dotnet fake build -t format

    - name: Build (Debug)
      run: dotnet build -c Debug

    - name: Build (Release)
      run: dotnet build -c Release

    - name: Resources
      if: startsWith( github.ref, 'refs/tags/v' )
      run: dotnet fake build -t resources.ci

    - name: Publish
      if: startsWith( github.ref, 'refs/tags/v' )
      run: dotnet fake build -t ${{ matrix.publis-target }}

    - name: Dist
      if: startsWith( github.ref, 'refs/tags/v' )
      run: dotnet fake build -t ${{ matrix.dist-target }}
